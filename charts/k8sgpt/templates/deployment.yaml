apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "k8sAI.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  {{- if .Values.deployment.annotations }}
  annotations:
  {{- toYaml .Values.deployment.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "k8sAI.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "k8sAI.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "k8sAI.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.deployment.securityContext }}
      securityContext:
        {{- toYaml .Values.deployment.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "k8sAI.fullname" . }}
      containers:
      - name: k8sAI-container
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
        image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}
        ports:
        - containerPort: 8080
        args: ["serve"]
        {{- if .Values.deployment.resources }}
        resources:
        {{- toYaml .Values.deployment.resources | nindent 10 }}
        {{- end }}
        env:
        - name: k8sAI_MODEL
          value: {{ .Values.deployment.env.model }}
        - name: k8sAI_BACKEND
          value: {{ .Values.deployment.env.backend }}
        {{- if .Values.secret.secretKey }}
        - name: k8sAI_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-backend-secret
              key: secret-key
        {{- end }}
        - name: XDG_CONFIG_HOME
          value: /k8sAI-config/
        - name: XDG_CACHE_HOME
          value: /k8sAI-config/
        volumeMounts:
        - mountPath: /k8sAI-config
          name: config
      volumes:
      - emptyDir: {}
        name: config
